"""
Django settings for perfumancer project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os


# Загрузка .env файла
from dotenv import load_dotenv
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-9f$y_#y(f#!n9+%0zlo-(ep2v)%cehog#0!$2a9khavx+_7nzm"

# SECURITY WARNING: don't run with debug turned on in production!

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rangefilter",
    "storages",
    "perfume.apps.PerfumeConfig",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "perfumancer.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "perfumancer.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases



# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "ru-ru"


USE_I18N = True
USE_L10N = True

TIME_ZONE = 'Europe/Moscow'
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = BASE_DIR / 'static'

# S3 Configuration для Selectel Cloud Storage (приватные файлы)
AWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = os.getenv('AWS_STORAGE_BUCKET_NAME')
AWS_S3_REGION_NAME = os.getenv('AWS_S3_REGION_NAME', 'ru-1')
AWS_S3_CUSTOM_DOMAIN = os.getenv('AWS_S3_CUSTOM_DOMAIN')

# Настройки для Selectel Cloud Storage
if AWS_STORAGE_BUCKET_NAME:
    AWS_S3_ENDPOINT_URL = 'https://s3.ru-1.storage.selcloud.ru'

# Настройки S3 для приватных файлов (безопасность)
AWS_DEFAULT_ACL = 'private'  # Все файлы приватные по умолчанию
AWS_S3_FILE_OVERWRITE = False  # Не перезаписываем файлы
AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=86400',
    'ACL': 'private',  # Принудительно приватные файлы
}
AWS_S3_SIGNATURE_VERSION = 's3v4'
AWS_S3_VERIFY = False  # Отключаем SSL проверку для совместимости

# Настройки подписанных URL для безопасного доступа
AWS_QUERYSTRING_AUTH = True  # Используем подписанные URL
AWS_QUERYSTRING_EXPIRE = 86400  # URL действительны 24 часа

# Media files configuration (изменяем с S3 URL на локальный путь)
# В settings/base.py
# S3 остается для хранения (как есть)
if AWS_STORAGE_BUCKET_NAME:
    AWS_S3_ENDPOINT_URL = 'https://s3.ru-1.storage.selcloud.ru'
    # НЕ меняем MEDIA_URL - пусть остается S3
    MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/' if AWS_S3_CUSTOM_DOMAIN else f'https://{AWS_STORAGE_BUCKET_NAME}.s3.ru-1.storage.selcloud.ru/'
else:
    MEDIA_URL = '/media/'
    MEDIA_ROOT = BASE_DIR / 'media'

# Новые настройки для локального кэша
INVOICE_CACHE_ROOT = BASE_DIR / 'receipts' / 'invoices'
INVOICE_CACHE_URL = '/cached-invoices/'
INVOICE_CACHE_EXPIRES_DAYS = 30  # Храним кэш 30 дней

# Создаем папку кэша
INVOICE_CACHE_ROOT.mkdir(parents=True, exist_ok=True)

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Логирование отключено для упрощения системы

# Локальный кэш для файлов с S3
INVOICE_CACHE_ROOT = BASE_DIR / 'receipts' / 'invoices'
INVOICE_CACHE_URL = '/cached-invoices/'

# Убеждаемся что папка существует
INVOICE_CACHE_ROOT.mkdir(parents=True, exist_ok=True)
