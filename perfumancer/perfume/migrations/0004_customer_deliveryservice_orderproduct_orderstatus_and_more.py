# Generated by Django 5.1.4 on 2025-01-10 12:49

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("perfume", "0003_alter_currencyrate_options"),
    ]

    operations = [
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="Имя заказчика"),
                ),
                (
                    "phone",
                    models.CharField(
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                code="invalid_phone",
                                message='Номер телефона должен быть в формате: "+79991234567"',
                                regex="^\\+?7\\d{10}$",
                            )
                        ],
                        verbose_name="Телефон",
                    ),
                ),
            ],
            options={
                "verbose_name": "Заказчик",
                "verbose_name_plural": "Заказчики",
            },
        ),
        migrations.CreateModel(
            name="DeliveryService",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, verbose_name="Название службы доставки"
                    ),
                ),
                (
                    "alias",
                    models.CharField(
                        max_length=50,
                        unique=True,
                        verbose_name="Псевдоним службы доставки",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        validators=[
                            django.core.validators.EmailValidator(
                                code="invalid_email",
                                message="Введите корректный email адрес",
                            )
                        ],
                        verbose_name="Email службы доставки",
                    ),
                ),
                (
                    "contact_phone",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                code="invalid_phone",
                                message='Номер телефона должен быть в формате: "+79991234567"',
                                regex="^\\+?7\\d{10}$",
                            )
                        ],
                        verbose_name="Контактный телефон службы доставки",
                    ),
                ),
            ],
            options={
                "verbose_name": "Служба доставки",
                "verbose_name_plural": "Службы доставки",
            },
        ),
        migrations.CreateModel(
            name="OrderProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Название товара"
                    ),
                ),
            ],
            options={
                "verbose_name": "Товар заказа",
                "verbose_name_plural": "Товары заказов",
            },
        ),
        migrations.CreateModel(
            name="OrderStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Название статуса"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="Код статуса"
                    ),
                ),
                ("order", models.IntegerField(verbose_name="Порядок отображения")),
            ],
            options={
                "verbose_name": "Статус заказа",
                "verbose_name_plural": "Статусы заказов",
                "ordering": ["order"],
            },
        ),
        migrations.AlterModelOptions(
            name="currencyrate",
            options={"verbose_name": "Курсы валют", "verbose_name_plural": "Курс USD"},
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="Дата заказа"
                    ),
                ),
                ("address", models.TextField(verbose_name="Адрес доставки")),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="perfume.customer",
                        verbose_name="Заказчик",
                    ),
                ),
                (
                    "delivery_service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to="perfume.deliveryservice",
                        verbose_name="Служба доставки",
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="orders",
                        to="perfume.orderstatus",
                        verbose_name="Статус заказа",
                    ),
                ),
            ],
            options={
                "verbose_name": "Заказ",
                "verbose_name_plural": "Заказы",
            },
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Количество",
                    ),
                ),
                (
                    "retail_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Розничная цена (рубли)",
                    ),
                ),
                (
                    "purchase_price_usd",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Цена закупки (в валюте)",
                    ),
                ),
                (
                    "purchase_price_rub",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Цена закупки (в рублях)",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="perfume.order",
                        verbose_name="Заказ",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_items",
                        to="perfume.supplier",
                        verbose_name="Поставщик",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="order_items",
                        to="perfume.orderproduct",
                        verbose_name="Товар",
                    ),
                ),
            ],
            options={
                "verbose_name": "Товар в заказе",
                "verbose_name_plural": "Товары в заказе",
            },
        ),
        migrations.AddIndex(
            model_name="order",
            index=models.Index(
                fields=["date", "status"], name="perfume_ord_date_844f7a_idx"
            ),
        ),
    ]
